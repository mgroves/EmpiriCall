@using EmpiriCall.Actions.ViewModels
<html>
    <head>
        <title>EmpiriCall</title>
        @Raw(this.Css("bootstrap.min.css"))
    </head>
    <body>
        <nav class="navbar navbar-inverse">
            <div class="container">
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                        <span class="sr-only">Toggle navigation</span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                    <a class="navbar-brand" href="#">EmpiriCall</a>
                </div>
                <div id="navbar" class="collapse navbar-collapse">
                    <ul class="nav navbar-nav">
                        <li @IsSelected("")><a href="/EmpiriCall.axd">Home</a></li>
                        <li @IsSelected("rawdetail")><a href="?command=rawdetail">Raw Detail</a></li>
                        <li @IsSelected("addmetaversion")><a href="?command=addmetaversion">Add New Meta</a></li>
                        <li @IsSelected("showmetadata")><a href="?command=showmetadata">Current Meta Data</a></li>
                        <li @IsSelected("showcalldata")><a href="?command=showcalldata">Show Call Data</a></li>
                        <li @IsSelected("loadfeature")><a href="?command=loadfeature">Load Feature Maps</a></li>
                    </ul>
                </div>
            </div>
        </nav>

        <div class="container">
            @RenderBody()
        </div>

        @Raw(this.Js("bootstrap.min.js"))
    </body>
</html>

@helper IsSelected(string name)
{
    string command = Request.QueryString["command"] ?? "";
    if(command == name)
    {
        <text>class="active"</text>
    }
}